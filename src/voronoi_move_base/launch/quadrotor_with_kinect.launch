<?xml version="1.0"?>

<launch>
   <arg name="name" default="quadrotor"/>
   <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
   <arg name="x" default="0.0"/>
   <arg name="y" default="0.0"/>
   <arg name="z" default="0.3"/>

   <arg name="use_ground_truth_for_tf" default="true"/>
   <arg name="use_ground_truth_for_control" default="true"/>
   <arg name="use_pose_estimation" if="$(arg use_ground_truth_for_control)" default="false"/>
   <arg name="use_pose_estimation" unless="$(arg use_ground_truth_for_control)" default="true"/>


   <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
   </include>

   <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch">
     <arg name="name" default="$(arg name)"/>
     <arg name="model" value="$(find voronoi_move_base)/urdf/quadrotor_with_kinect.gazebo.xacro"/>
     <arg name="tf_prefix" default="$(arg tf_prefix)"/>
     <arg name="x" default="$(arg x)"/>
     <arg name="y" default="$(arg y)"/>
     <arg name="z" default="$(arg z)"/>   
     <arg name="use_ground_truth_for_tf" value="$(arg use_ground_truth_for_tf)"/>
     <arg name="use_ground_truth_for_control" value="$(arg use_ground_truth_for_control)"/>
     <arg name="use_pose_estimation" value="$(arg use_pose_estimation)"/>
   </include>

	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.05" />
	
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<!--param name="frame_id" type="string" value="odom_combined" /-->
		<param name="frame_id" type="string" value="world" />
	
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />

		<!-- let it cut ground from the map -->
		<param name="filter_ground" value="true" />
	
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/camera/depth/points" />

	</node>

</launch>

